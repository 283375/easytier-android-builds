name: Main
run-name: Main (${{ inputs.easytier_tag || 'Auto tag' }})

on:
  workflow_dispatch:
    inputs:
      easytier_tag:
        description: "Which tag of EasyTier to build, leave blank for latest"
        required: false
        type: string

jobs:
  prepare:
    runs-on: ubuntu-latest
    name: Prepare Source Code

    permissions:
      contents: write

    outputs:
      easytier_tag: ${{ env.EASYTIER_TAG }}

    steps:
      - name: Find latest tag of EasyTier
        if: ${{ !inputs.easytier_tag }}
        uses: oprypin/find-latest-tag@v1
        id: version
        with:
          repository: "EasyTier/EasyTier"
          releases-only: true

      - name: Determine EasyTier tag
        run: |
          echo "EASYTIER_TAG=${{ inputs.easytier_tag || steps.version.outputs.tag }}" >> "$GITHUB_ENV"

      - name: Checkout EasyTier
        uses: actions/checkout@v4
        with:
          repository: "EasyTier/EasyTier"
          ref: ${{ env.EASYTIER_TAG }}

      - name: Prepare patches
        uses: actions/checkout@v4
        with:
          path: my-patches

      # https://github.com/orgs/community/discussions/40405#discussioncomment-8361451
      - name: Set git identities
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"

      - name: Apply patches
        run: |
          find "${GITHUB_WORKSPACE}/my-patches" -type f -name "*.patch" -print0 | sort -z | xargs -0 -I {} git am {}

      - name: Remove extra folders
        run: |
          rm -rf "my-patches"
          rm -rf ".git"
          rm -rf .github/workflows/*.{yml,yaml}

      - name: Pack source code
        run: |
          tar -czvf /tmp/source.tar.gz .

      - name: Upload source code
        uses: actions/upload-artifact@v4
        with:
          name: source-patched
          path: /tmp/source.tar.gz
          include-hidden-files: true
      
      - name: Checkout app branch
        uses: actions/checkout@v4
        with:
          ref: 'app'
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Apply new codebase
        run: tar -xzvf /tmp/source.tar.gz -C .

      - name: Commit and push
        run: |
          git add .
          git commit -m "${{ env.EASYTIER_TAG }}"
          git push -d origin "${{ env.EASYTIER_TAG }}" || true
          git tag -f "${{ env.EASYTIER_TAG }}"
          git push
          git push --tags

  build:
    needs: prepare
    uses: ./.github/workflows/build-apk.yml

  release:
    needs:
      - build
      - prepare
    runs-on: ubuntu-latest
    name: Release

    permissions:
      contents: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          name: ${{ needs.build.outputs.outputs_artifact_name }}
          path: ./artifacts

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.prepare.outputs.easytier_tag }}
          files: |
            artifacts/*